import React from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './PreMeetingBrief.css';\n\ninterface MeetingInfo {\n  title: string;\n  time: string;\n  participants: string[];\n  inProgress: boolean;\n}\n\ninterface PreMeetingBriefProps {\n  meeting: MeetingInfo;\n}\n\nconst PreMeetingBrief: React.FC<PreMeetingBriefProps> = ({ meeting }) => {\n  const { state } = useAppContext();\n  \n  const getPersonByName = (name: string) => {\n    return state.people.find(person => person.name === name);\n  };\n\n  const knownParticipants = meeting.participants\n    .map(name => getPersonByName(name))\n    .filter(Boolean);\n\n  const conversationHooks = [\n    {\n      person: 'Madison Chen',\n      hook: 'Ask about AI music latency optimization progress',\n      context: 'Last mentioned working on reducing generation time'\n    },\n    {\n      person: 'Sarah Kim',\n      hook: 'Discuss potential collaboration on bias detection',\n      context: 'Her NLP research aligns with our ethics work'\n    }\n  ];\n\n  const openLoops = [\n    {\n      text: 'Send Madison the voice processing research paper',\n      dueDate: 'Overdue by 2 days',\n      urgent: true\n    },\n    {\n      text: 'Share WICS event photos with Sarah',\n      dueDate: 'Due today',\n      urgent: false\n    }\n  ];\n\n  return (\n    <div className=\"pre-meeting-brief\">\n      <div className=\"brief-header\">\n        <h2>üìã Pre-Meeting Brief</h2>\n        <div className=\"meeting-info\">\n          <h3>{meeting.title}</h3>\n          <p className=\"meeting-time\">{meeting.time}</p>\n          <p className=\"meeting-status\">\n            {meeting.inProgress ? 'üî¥ In Progress' : '‚è∞ Upcoming'}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"brief-content\">\n        <section className=\"known-participants\">\n          <h4>üë• You've met these {knownParticipants.length} before</h4>\n          <div className=\"participants-grid\">\n            {knownParticipants.map(person => (\n              <div key={person!.id} className=\"participant-card\">\n                <div className=\"participant-header\">\n                  <div className=\"participant-avatar\">\n                    {person!.name.split(' ').map(n => n[0]).join('')}\n                  </div>\n                  <div className=\"participant-info\">\n                    <h5>{person!.name}</h5>\n                    <p>{person!.company} ‚Ä¢ {person!.role}</p>\n                  </div>\n                </div>\n                <div className=\"participant-vibes\">\n                  <strong>Vibes:</strong> {person!.vibes}\n                </div>\n                <div className=\"participant-tags\">\n                  {person!.tags.map(tag => (\n                    <span key={tag} className=\"tag\">{tag}</span>\n                  ))}\n                </div>\n                <div className=\"last-interaction\">\n                  <small>\n                    Last met: {person!.lastMeeting?.toLocaleDateString()} \n                    ({person!.meetingCount} meetings total)\n                  </small>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        <section className=\"conversation-hooks\">\n          <h4>üí° Conversation hooks to mention</h4>\n          <div className=\"hooks-list\">\n            {conversationHooks.map((hook, index) => (\n              <div key={index} className=\"hook-item\">\n                <div className=\"hook-person\">{hook.person}</div>\n                <div className=\"hook-suggestion\">{hook.hook}</div>\n                <div className=\"hook-context\">{hook.context}</div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        <section className=\"open-loops\">\n          <h4>üîÑ Open loops (promises to keep)</h4>\n          <div className=\"loops-list\">\n            {openLoops.map((loop, index) => (\n              <div key={index} className={`loop-item ${loop.urgent ? 'urgent' : ''}`}>\n                <div className=\"loop-text\">{loop.text}</div>\n                <div className=\"loop-due\">{loop.dueDate}</div>\n                {loop.urgent && <span className=\"urgent-badge\">Urgent</span>}\n              </div>\n            ))}\n          </div>\n        </section>\n\n        <section className=\"meeting-prep\">\n          <h4>üéØ Meeting Preparation</h4>\n          <div className=\"prep-checklist\">\n            <label className=\"checkbox-item\">\n              <input type=\"checkbox\" defaultChecked />\n              <span>Review participant context</span>\n            </label>\n            <label className=\"checkbox-item\">\n              <input type=\"checkbox\" />\n              <span>Prepare WICS updates to share</span>\n            </label>\n            <label className=\"checkbox-item\">\n              <input type=\"checkbox\" />\n              <span>Bring up collaboration opportunities</span>\n            </label>\n            <label className=\"checkbox-item\">\n              <input type=\"checkbox\" />\n              <span>Follow up on pending action items</span>\n            </label>\n          </div>\n        </section>\n\n        <section className=\"suggested-outcomes\">\n          <h4>üé™ Suggested meeting outcomes</h4>\n          <div className=\"outcomes-list\">\n            <div className=\"outcome-item\">\n              <span className=\"outcome-icon\">ü§ù</span>\n              <span>Set up Madison-Sarah collaboration on AI ethics</span>\n            </div>\n            <div className=\"outcome-item\">\n              <span className=\"outcome-icon\">üìÖ</span>\n              <span>Schedule follow-up technical deep-dive</span>\n            </div>\n            <div className=\"outcome-item\">\n              <span className=\"outcome-icon\">üìß</span>\n              <span>Exchange relevant research papers and resources</span>\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <div className=\"brief-actions\">\n        <button \n          className=\"start-meeting-btn\"\n          onClick={() => alert('Zoom integration not implemented - this would open Zoom with Perfect Context panel')}\n        >\n          üìπ Start Meeting with Perfect Context\n        </button>\n        <button className=\"save-brief-btn\">\n          üíæ Save Brief\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PreMeetingBrief;"