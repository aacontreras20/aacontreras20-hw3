import React, { useState } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './MeetingHistory.css';\n\nconst MeetingHistory: React.FC = () => {\n  const { state } = useAppContext();\n  const [selectedMeeting, setSelectedMeeting] = useState<string | null>(null);\n  const [showPostMeetingWrap, setShowPostMeetingWrap] = useState(false);\n\n  const getPersonName = (personId: string) => {\n    const person = state.people.find(p => p.id === personId);\n    return person?.name || 'Unknown';\n  };\n\n  const selectedMeetingData = selectedMeeting \n    ? state.meetings.find(m => m.id === selectedMeeting)\n    : null;\n\n  const handleViewPostMeetingWrap = (meetingId: string) => {\n    setSelectedMeeting(meetingId);\n    setShowPostMeetingWrap(true);\n  };\n\n  const generateFollowUpEmail = (meeting: any) => {\n    const attendeeNames = meeting.attendees.map(getPersonName).join(', ');\n    return `Subject: Follow-up from ${meeting.title}\\n\\nHi ${attendeeNames},\\n\\nThanks for the great discussion today! Here are the key points and action items:\\n\\n${meeting.summary}\\n\\nAction items:\\n${meeting.actionItems.map((item: any) => `• ${item.text}`).join('\\n')}\\n\\nLooking forward to our continued collaboration!\\n\\nBest,\\nMary`;\n  };\n\n  return (\n    <div className=\"meeting-history\">\n      <div className=\"history-header\">\n        <h2>📅 Meeting History</h2>\n        <p className=\"history-subtitle\">\n          Review past meetings, summaries, and follow-up actions\n        </p>\n      </div>\n\n      <div className=\"history-content\">\n        <div className=\"meetings-list\">\n          <div className=\"meetings-header\">\n            <h3>Recent Meetings ({state.meetings.length})</h3>\n            <div className=\"filter-options\">\n              <select className=\"meeting-filter\">\n                <option>All meetings</option>\n                <option>This week</option>\n                <option>This month</option>\n                <option>With recordings</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"meetings-grid\">\n            {state.meetings.map(meeting => (\n              <div key={meeting.id} className=\"meeting-card\">\n                <div className=\"meeting-header\">\n                  <div className=\"meeting-date\">\n                    {meeting.date.toLocaleDateString()}\n                  </div>\n                  <div className=\"meeting-recording-status\">\n                    {meeting.isRecorded ? '🎥 Recorded' : '📝 Notes Only'}\n                  </div>\n                </div>\n                \n                <h4 className=\"meeting-title\">{meeting.title}</h4>\n                \n                <div className=\"meeting-attendees\">\n                  <strong>Attendees:</strong> {meeting.attendees.map(getPersonName).join(', ')}\n                </div>\n                \n                <div className=\"meeting-summary\">\n                  {meeting.summary}\n                </div>\n                \n                <div className=\"meeting-stats\">\n                  <span className=\"stat\">\n                    {meeting.actionItems.length} action items\n                  </span>\n                  <span className=\"stat\">\n                    {meeting.actionItems.filter(item => item.completed).length} completed\n                  </span>\n                </div>\n                \n                <div className=\"meeting-actions\">\n                  <button \n                    className=\"action-btn primary\"\n                    onClick={() => handleViewPostMeetingWrap(meeting.id)}\n                  >\n                    📋 View Wrap-up\n                  </button>\n                  <button \n                    className=\"action-btn secondary\"\n                    onClick={() => {\n                      const email = generateFollowUpEmail(meeting);\n                      alert('Email integration not implemented. Generated email:\\n\\n' + email);\n                    }}\n                  >\n                    📧 Generate Follow-up\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {showPostMeetingWrap && selectedMeetingData && (\n          <div className=\"post-meeting-wrap\">\n            <div className=\"wrap-header\">\n              <h3>📋 Post-Meeting Wrap-up</h3>\n              <button \n                className=\"close-wrap\"\n                onClick={() => setShowPostMeetingWrap(false)}\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"wrap-content\">\n              <div className=\"meeting-overview\">\n                <h4>{selectedMeetingData.title}</h4>\n                <div className=\"overview-details\">\n                  <div className=\"detail-item\">\n                    <strong>Date:</strong> {selectedMeetingData.date.toLocaleDateString()}\n                  </div>\n                  <div className=\"detail-item\">\n                    <strong>Duration:</strong> 1 hour (estimated)\n                  </div>\n                  <div className=\"detail-item\">\n                    <strong>Attendees:</strong> {selectedMeetingData.attendees.map(getPersonName).join(', ')}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"wrap-section\">\n                <h4>📝 Meeting Summary</h4>\n                <div className=\"summary-content\">\n                  {selectedMeetingData.summary}\n                </div>\n              </div>\n\n              <div className=\"wrap-section\">\n                <h4>✅ Action Items</h4>\n                <div className=\"action-items-list\">\n                  {selectedMeetingData.actionItems.map(item => (\n                    <div key={item.id} className={`action-item ${item.completed ? 'completed' : ''}`}>\n                      <div className=\"action-checkbox\">\n                        <input \n                          type=\"checkbox\" \n                          checked={item.completed}\n                          onChange={() => {\n                            // In a real app, this would update the state\n                            alert('Action item update not implemented in demo');\n                          }}\n                        />\n                      </div>\n                      <div className=\"action-details\">\n                        <div className=\"action-text\">{item.text}</div>\n                        <div className=\"action-meta\">\n                          Assigned to: {item.assignedTo} \n                          {item.dueDate && ` • Due: ${item.dueDate.toLocaleDateString()}`}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"wrap-section\">\n                <h4>🔄 Follow-up Suggestions</h4>\n                <div className=\"followup-suggestions\">\n                  <div className=\"suggestion-item\">\n                    <div className=\"suggestion-icon\">📧</div>\n                    <div className=\"suggestion-content\">\n                      <strong>Send thank you email</strong>\n                      <p>Include meeting summary and action items</p>\n                    </div>\n                    <button className=\"suggestion-btn\">Generate</button>\n                  </div>\n                  <div className=\"suggestion-item\">\n                    <div className=\"suggestion-icon\">📅</div>\n                    <div className=\"suggestion-content\">\n                      <strong>Schedule follow-up meeting</strong>\n                      <p>Based on action item deadlines</p>\n                    </div>\n                    <button className=\"suggestion-btn\">Schedule</button>\n                  </div>\n                  <div className=\"suggestion-item\">\n                    <div className=\"suggestion-icon\">🔗</div>\n                    <div className=\"suggestion-content\">\n                      <strong>Connect attendees</strong>\n                      <p>Facilitate potential collaborations</p>\n                    </div>\n                    <button className=\"suggestion-btn\">Connect</button>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"wrap-section\">\n                <h4>🎯 Key Insights</h4>\n                <div className=\"insights-list\">\n                  <div className=\"insight-item\">\n                    💡 Madison and Sarah have complementary research interests\n                  </div>\n                  <div className=\"insight-item\">\n                    🤝 Potential collaboration opportunity on AI ethics\n                  </div>\n                  <div className=\"insight-item\">\n                    📈 Growing interest in technical deep-dives\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"wrap-actions\">\n                <button className=\"wrap-btn primary\">\n                  💾 Save Summary\n                </button>\n                <button className=\"wrap-btn secondary\">\n                  📤 Share Summary\n                </button>\n                <button className=\"wrap-btn secondary\">\n                  📝 Add Notes\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"history-stats\">\n        <div className=\"stats-container\">\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">{state.meetings.length}</div>\n            <div className=\"stat-label\">Total Meetings</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">\n              {state.meetings.reduce((sum, m) => sum + m.actionItems.length, 0)}\n            </div>\n            <div className=\"stat-label\">Action Items Created</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">\n              {Math.round(\n                (state.meetings.reduce((sum, m) => sum + m.actionItems.filter(a => a.completed).length, 0) /\n                state.meetings.reduce((sum, m) => sum + m.actionItems.length, 0)) * 100\n              )}%\n            </div>\n            <div className=\"stat-label\">Completion Rate</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">{state.people.length}</div>\n            <div className=\"stat-label\">Unique Contacts</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MeetingHistory;"