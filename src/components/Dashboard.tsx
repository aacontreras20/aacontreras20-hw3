import React, { useState } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport PreMeetingBrief from './PreMeetingBrief';\nimport PeopleSearch from './PeopleSearch';\nimport MeetingHistory from './MeetingHistory';\nimport Settings from './Settings';\nimport './Dashboard.css';\n\ntype ActiveView = 'brief' | 'search' | 'history' | 'settings';\n\nconst Dashboard: React.FC = () => {\n  const { state } = useAppContext();\n  const [activeView, setActiveView] = useState<ActiveView>('brief');\n  const [showZoomPanel, setShowZoomPanel] = useState(false);\n\n  const upcomingMeeting = {\n    title: 'Weekly WICS Leadership Meeting',\n    time: '2:00 PM - 3:00 PM',\n    participants: ['Sarah Kim', 'Madison Chen', '3 others'],\n    inProgress: false\n  };\n\n  const renderMainContent = () => {\n    switch (activeView) {\n      case 'brief':\n        return <PreMeetingBrief meeting={upcomingMeeting} />;\n      case 'search':\n        return <PeopleSearch />;\n      case 'history':\n        return <MeetingHistory />;\n      case 'settings':\n        return <Settings />;\n      default:\n        return <PreMeetingBrief meeting={upcomingMeeting} />;\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <div className=\"header-content\">\n          <div className=\"logo-section\">\n            <h1>Perfect Context</h1>\n            <span className=\"user-name\">Hi Mary! 👋</span>\n          </div>\n          <div className=\"header-actions\">\n            <button \n              className=\"zoom-btn\"\n              onClick={() => setShowZoomPanel(!showZoomPanel)}\n            >\n              📹 Zoom Panel {showZoomPanel ? '(Active)' : ''}\n            </button>\n            <div className=\"consent-status\">\n              <span className=\"status-indicator notes\">📝 Notes Mode</span>\n              {state.consentSettings.transcriptEnabled && (\n                <span className=\"status-indicator transcript\">📄 Transcript On</span>\n              )}\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"dashboard-layout\">\n        <nav className=\"sidebar\">\n          <div className=\"nav-items\">\n            <button \n              className={`nav-item ${activeView === 'brief' ? 'active' : ''}`}\n              onClick={() => setActiveView('brief')}\n            >\n              <span className=\"nav-icon\">📋</span>\n              Meeting Brief\n            </button>\n            <button \n              className={`nav-item ${activeView === 'search' ? 'active' : ''}`}\n              onClick={() => setActiveView('search')}\n            >\n              <span className=\"nav-icon\">🔍</span>\n              People Search\n            </button>\n            <button \n              className={`nav-item ${activeView === 'history' ? 'active' : ''}`}\n              onClick={() => setActiveView('history')}\n            >\n              <span className=\"nav-icon\">📅</span>\n              Meeting History\n            </button>\n            <button \n              className={`nav-item ${activeView === 'settings' ? 'active' : ''}`}\n              onClick={() => setActiveView('settings')}\n            >\n              <span className=\"nav-icon\">⚙️</span>\n              Settings\n            </button>\n          </div>\n          \n          <div className=\"sidebar-footer\">\n            <div className=\"quick-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-number\">{state.people.length}</span>\n                <span className=\"stat-label\">People</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-number\">{state.meetings.length}</span>\n                <span className=\"stat-label\">Meetings</span>\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        <main className=\"main-content\">\n          {renderMainContent()}\n        </main>\n\n        {showZoomPanel && (\n          <div className=\"zoom-panel\">\n            <div className=\"zoom-panel-header\">\n              <h3>In-Meeting Whisper</h3>\n              <button \n                className=\"close-panel\"\n                onClick={() => setShowZoomPanel(false)}\n              >\n                ✕\n              </button>\n            </div>\n            <div className=\"zoom-panel-content\">\n              <div className=\"meeting-context\">\n                <h4>Current Meeting Context</h4>\n                <div className=\"context-item\">\n                  <strong>Participants:</strong> Sarah, Madison, +3 others\n                </div>\n                <div className=\"context-item\">\n                  <strong>Last discussed:</strong> AI music latency (Madison)\n                </div>\n              </div>\n              \n              <div className=\"live-prompts\">\n                <h4>Live Prompts</h4>\n                <div className=\"prompt-item\">\n                  💡 Ask Madison about her latency optimization progress\n                </div>\n                <div className=\"prompt-item\">\n                  🤝 Sarah mentioned bias detection - good collaboration opportunity\n                </div>\n              </div>\n              \n              <div className=\"quick-capture\">\n                <h4>Quick Capture</h4>\n                <textarea \n                  placeholder=\"Capture important moments, action items, or insights...\"\n                  rows={3}\n                />\n                <button className=\"capture-btn\">💾 Save Note</button>\n              </div>\n              \n              <div className=\"integration-note\">\n                <p><strong>Demo Mode:</strong> In a real implementation, this panel would integrate with Zoom to provide real-time suggestions and capture.</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"